# Default values for camel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
revisionHistoryLimit: 1

namespace: "${NAMESPACE}"

labels:
  app: "${NAMESPACE}-${APP_NAME}"

selectorLabels:
  app: "${NAMESPACE}-${APP_NAME}"
  tags.otel/service: "${NAMESPACE}-${APP_NAME}"
  tags.otel/version: "${IMAGE_TAG}"

image:
  repository: "${ECR_REPO_URL}/utils/${APP_NAME}"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "${IMAGE_TAG}"

imagePullSecrets: [{ name: ecr-secret }]
imageCredentials:
  registry: ${ECR_REPO_URL}
  username: AWS
  password: ${ECR_TOKEN}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "${APP_NAME}"

env:
  
service:
  protocol: TCP
  port: 80
  targetPort: "${SERVICE_PORT}"
  type: "${SERVICE_TYPE}"

ingress:
  enabled: true
  className: "alb"    
  annotations:
    alb.ingress.kubernetes.io/group.name: "arbeon-${ENV}-${ALB_NAME}-group"
    alb.ingress.kubernetes.io/load-balancer-name: "arbeon-${ENV}-${ALB_NAME}"
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/scheme: "${ALB_SCHEME}"
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "${ALB_CERT_ARN}"
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    # alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=arbeon-${ENV}-alb-access-logs,access_logs.s3.prefix=${ALB_NAME}
  tls:
    - secretName: arbeon-com-tls
      hosts:
      - "${CERT_DNS}"
  rules:
    - host: "${INGRESS_HOST}"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "${NAMESPACE}-${APP_NAME}-service"
              port:
                number: 80

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  node: worker
