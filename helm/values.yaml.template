# Default values for camel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
revisionHistoryLimit: 1

namespace: "${NAMESPACE}"

labels:
  app: "${NAMESPACE}-${APP_NAME}"

selectorLabels:
  app: "${NAMESPACE}-${APP_NAME}"
  tags.otel/service: "${NAMESPACE}-${APP_NAME}"
  tags.otel/version: "${IMAGE_TAG}"

image:
  repository: "${ECR_REPO_URL}/utils/${APP_NAME}"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "${IMAGE_TAG}"

imagePullSecrets: [{ name: ecr-secret }]
imageCredentials:
  registry: ${ECR_REPO_URL}
  username: AWS
  password: ${ECR_TOKEN}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "${APP_NAME}"

env:
  
service:
  protocol: TCP
  port: 80
  targetPort: "${SERVICE_PORT}"
  type: "${SERVICE_TYPE}"

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "https"
    nginx.org/grpc-services: "${NAMESPACE}-${APP_NAME}-service"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  tls:
    - secretName: arbeon-com-tls
      hosts:
      - "${CERT_DNS}"
  rules:
    - host: "${INGRESS_HOST}"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "${NAMESPACE}-${APP_NAME}-service"
              port:
                number: 80

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  node: worker